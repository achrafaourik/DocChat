 
 
 
 
 
 
 
 
 
 
Collection | Chroma 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Skip to main content 
Chroma 
Python 
Javascript 
Discord 
@trychroma 
GitHub 
🏡 Home 
🔑 Getting Started 
🧪 Usage Guide 
🧬 Embeddings 
👽 About 
📖 API Cheatsheet 
🔌 Integrations 
☁️ Deployment 
📏 Telemetry 
🛣️ Roadmap 
🔍 Troubleshooting 
⚪️ JS Docs 
⚪️ Python Docs 
Client 
Collection 
⚪️ Python Docs 
Collection 
On this page 
Collection Objects 
count 
​ 
The total number of embeddings added to the database 
Returns 
: 
- The total number of embeddings added to the database 
add 
​ 
Add embeddings to the data store.
Arguments 
: 
- The ids of the embeddings you wish to add 
 - The embeddings to add. If None, embeddings will be computed based on the documents using the embedding_function set for the Collection. Optional.
 - The metadata to associate with the embeddings. When querying, you can filter on this metadata. Optional.
 - The documents to associate with the embeddings. Optional.
 - The ids to associate with the embeddings. Optional.
Returns 
: 
None 
Raises 
: 
- If you don't provide either embeddings or documents 
- If the length of ids, embeddings, metadatas, or documents don't match 
- If you don't provide an embedding function and don't provide embeddings 
- If you provide both embeddings and documents 
- If you provide an id that already exists 
get 
​ 
Get embeddings and their associate data from the data store. If no ids or where filter is provided returns 
all embeddings up to limit starting at offset.
Arguments 
: 
 - The ids of the embeddings to get. Optional.
 - A Where type dict used to filter results by. E.g. 
. Optional.
 - The number of documents to return. Optional.
 - The offset to start returning results from. Useful for paging results with limit. Optional.
 - A WhereDocument type dict used to filter by the documents. E.g. 
. Optional.
- A list of what to include in the results. Can contain 
, 
, 
. Ids are always included. Defaults to 
. Optional.
Returns 
: 
 - A GetResult object containing the results.
peek 
​ 
Get the first few results in the database up to limit 
Arguments 
: 
 - The number of results to return.
Returns 
: 
 - A GetResult object containing the results.
query 
​ 
Get the n_results nearest neighbor embeddings for provided query_embeddings or query_texts.
Arguments 
: 
 - The embeddings to get the closes neighbors of. Optional.
 - The document texts to get the closes neighbors of. Optional.
 - The number of neighbors to return for each query_embedding or query_texts. Optional.
 - A Where type dict used to filter results by. E.g. 
. Optional.
 - A WhereDocument type dict used to filter by the documents. E.g. 
. Optional.
- A list of what to include in the results. Can contain 
, 
, 
, 
. Ids are always included. Defaults to 
. Optional.
Returns 
: 
 - A QueryResult object containing the results.
Raises 
: 
- If you don't provide either query_embeddings or query_texts 
- If you provide both query_embeddings and query_texts 
modify 
​ 
Modify the collection name or metadata 
Arguments 
: 
 - The updated name for the collection. Optional.
 - The updated metadata for the collection. Optional.
Returns 
: 
None 
update 
​ 
Update the embeddings, metadatas or documents for provided ids.
Arguments 
: 
- The ids of the embeddings to update 
 - The embeddings to add. If None, embeddings will be computed based on the documents using the embedding_function set for the Collection. Optional.
 - The metadata to associate with the embeddings. When querying, you can filter on this metadata. Optional.
 - The documents to associate with the embeddings. Optional.
Returns 
: 
None 
upsert 
​ 
Update the embeddings, metadatas or documents for provided ids, or create them if they don't exist.
Arguments 
: 
- The ids of the embeddings to update 
 - The embeddings to add. If None, embeddings will be computed based on the documents using the embedding_function set for the Collection. Optional.
 - The metadata to associate with the embeddings. When querying, you can filter on this metadata. Optional.
 - The documents to associate with the embeddings. Optional.
Returns 
: 
None 
delete 
​ 
Delete the embeddings based on ids and/or a where filter 
Arguments 
: 
- The ids of the embeddings to delete 
 - A Where type dict used to filter the delection by. E.g. 
. Optional.
 - A WhereDocument type dict used to filter the deletion by the document content. E.g. 
. Optional.
Returns 
: 
None 
Edit this page 
Previous 
Client 
count 
add 
get 
peek 
query 
modify 
update 
upsert 
delete 
Docs 
Getting Started 
API Reference 
Community 
Discord 
Twitter 
More 
About 
GitHub 
Privacy 
Terms 
 
 
 
 
 
 
 
